<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="dash_service">

	<!-- DashBoard 콜 통계 (전체, INBOUND, OUTBOUND, 내선 - 실시간(본점, 영업점), 누적(본점, 영업점))-->
	<select id="dashboardCallStatis" resultType="java.util.HashMap" parameterType="java.util.HashMap">
	/* dash_service.dashboardCallStatis */
	SELECT 
		OUT_PK + IN_PK AS TOTAL_PK,
		OUT_PK, 
		IN_PK,
		OUT_SE + IN_SE AS TOTAL_SE,
		OUT_SE,
		IN_SE
	FROM (
		SELECT 
			(SELECT COALESCE(SUM(OBEXCONN),0) FROM TB_ERS_AGTOUTBOUND) AS OUT_SE,
			(SELECT COALESCE(SUM(NUM),0) FROM TB_ERS_GROUPTOP WHERE IBG LIKE 'VO_%') AS IN_SE,
			0 AS OUT_PK,
			0 AS IN_PK
		FROM DUAL
	) A
	</select>

	<!-- VG실시간 사용현황 - 8000: 본사VG, 8500: 전국VG -->
	<select id="vgRealtimeUseState" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.vgRealtimeUseState */
		SELECT
			IFNULL(COUNT(N_STATUS), 0) AS TOT_COUNT, 
			IFNULL(SUM(CASE N_STATUS WHEN 1 THEN 0 ELSE 1 END), 0) AS USE_COUNT
		FROM 	
				TB_SNMP_REAL_M03_E1_STATUS M INNER JOIN TB_MON_INFO S
			ON	M.N_MON_ID = S.N_MON_ID
		WHERE
			S.N_TYPE_CODE = #{N_TYPE_CODE}
	</select>

	
	<select id="vgRealtimeUseCount" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* 20180820 kdh 전체 채널이 0인건 스킵 (아날로그) */
		/* dash_service.vgRealtimeUseCount */
		SELECT 
			A.* 
			FROM (
				SELECT
					S.N_MON_ID, MAX(S.S_MON_NAME) AS MON_NAME, 
					IFNULL(COUNT(N_STATUS), 0) AS TOT_COUNT, 
					IFNULL(SUM(CASE N_STATUS WHEN 1 THEN 0 ELSE 1 END), 0) AS USE_COUNT
				FROM 	
					TB_MON_INFO S LEFT OUTER JOIN TB_SNMP_REAL_M03_E1_STATUS M 
					ON	M.N_MON_ID = S.N_MON_ID
				WHERE
					S.N_TYPE_CODE = #{N_TYPE_CODE}
				GROUP BY
					S.N_MON_ID
				) A
			WHERE 
				A.TOT_COUNT > 0
					
		
	</select>


	<!-- 실시간 IN/OUT현황 -->
	<select id="callRealtimeAccrueState" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.vgRealtimeAccrueState */
		SELECT
			IFNULL(SUM(CASE WHEN N_CALL_TYPE = 0 THEN 1 ELSE 0 END), 0) AS IB_COUNT, 
			IFNULL(SUM(CASE WHEN N_CALL_TYPE = 1 THEN 1 ELSE 0 END), 0) AS OB_COUNT
		FROM
			TB_CALL_STATE_INFO
		WHERE 
			N_STATE_CODE = 2 
			AND	S_ADDRESS not like '9%' 
			AND S_ADDRESS not like '010%'
			<if test="CLUSTER_TYPE == 'BONSA'">
				AND N_CLUSTER IN ( 0, 1 )
			</if>
			<if test="CLUSTER_TYPE == 'JIJUM'">
				AND N_CLUSTER = 2
			</if>
	</select>


	<!-- 콜센터 대표번호별 인입현황 -->
	<select id="callDaepyoIncallState" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.vgDaepyoIncallState */
		SELECT 
			S_NUM, S_NAME, N_ORDER, SUM(IN_COUNT) AS IN_COUNT
		FROM (	 			
		SELECT M.S_NUM, M.S_NAME, S.N_ORDER, IFNULL(M.N_INBOUND, 0) AS IN_COUNT
		FROM
			TB_DASH_DAEPYO_CALL_ORDER S INNER JOIN TB_DASH_DAEPYO_CALL M
			ON	M.S_NUM = S.S_NUM
		WHERE
			N_DAY =  DATE_FORMAT(now(), '%Y%m%d')	
		UNION ALL
		SELECT
			S_NUM, S_NAME, N_ORDER, 0 AS IN_COUNT	 	
		FROM 
			TB_DASH_DAEPYO_CALL_ORDER
		) A
		WHERE
			A.S_NUM IN
			<foreach collection="NUM_LIST" item="seqno" separator="," open="(" close=")">
			    #{seqno}
			</foreach>
		GROUP BY
			S_NUM, S_NAME, N_ORDER
		ORDER BY N_ORDER	
	</select>


	<!-- 콜사용 현황 (PEAK) -->
	<select id="callUsePeakGroup" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.callUsePeakGroup */
		SELECT 
			N_GROUP_ID, N_TIME, N_ACTIVE AS TOT_COUNT
		FROM 
			TB_SNMP_REAL_M03_E1_PEAK_GRP
		WHERE	
			N_GROUP_ID IN (8000, 8500) AND
			N_DAY = DATE_FORMAT(now(), '%Y%m%d')
	</select>


	<!-- 콜누적 현황 -->
	<select id="callNowSummaryState" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.callNowSummaryState */
		SELECT
			/* CLUSTER_NO -  1: 본사/콜센터, 2:지점 */
			CASE WHEN N_CLUSTER = 2 THEN 2 ELSE 1 END AS CLUSTER_NO, N_TIME, 
			MAX(N_INBOUND) AS IN_COUNT, MAX(N_OUTBOUND) AS OUT_COUNT, 
			MAX(N_INBOUND) + MAX(N_OUTBOUND) AS TOT_COUNT
		FROM TB_TAPI_CALL_ACCRUE
		WHERE	N_DAY = DATE_FORMAT(now(), '%Y%m%d')
		GROUP BY CLUSTER_NO, N_TIME
		ORDER BY CLUSTER_NO, N_TIME
	</select>


	<!-- 콜 현황 (지점/본사/콜센터) -->
	<select id="callTotSummaryState" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.callSummaryState */
		SELECT
			'D' AS D_TYPE, N_CLUSTER, 
			MAX(N_INBOUND) AS IN_COUNT, MAX(N_OUTBOUND) AS OUT_COUNT, 
			MAX(N_INBOUND) + MAX(N_OUTBOUND) AS TOT_COUNT
		FROM TB_TAPI_CALL_ACCRUE
		WHERE	N_DAY = DATE_FORMAT(now(), '%Y%m%d')
		GROUP BY N_CLUSTER
		
		UNION ALL
		SELECT
			'W' AS D_TYPE, N_CLUSTER, 
			SUM(IN_COUNT) AS IN_COUNT, SUM(OUT_COUNT) AS OUT_COUNT, 
			SUM(IN_COUNT) + SUM(OUT_COUNT) AS TOT_COUNT
		FROM (
			SELECT
				'D' AS D_TYPE, N_CLUSTER, 
				N_DAY,
				MAX(N_INBOUND) AS IN_COUNT, MAX(N_OUTBOUND) AS OUT_COUNT, 
				MAX(N_INBOUND) + MAX(N_OUTBOUND) AS TOT_COUNT
			FROM TB_TAPI_CALL_ACCRUE
			GROUP BY N_CLUSTER, N_DAY
		) A
		WHERE	N_DAY BETWEEN DATE_FORMAT(DATE(CURDATE() - INTERVAL (DAYOFWEEK(CURDATE())-1) DAY), '%Y%m%d') AND DATE_FORMAT(DATE(CURDATE() + INTERVAL (7-DAYOFWEEK(CURDATE())) DAY), '%Y%m%d')
		GROUP BY N_CLUSTER
		UNION ALL
		SELECT
			'M' AS D_TYPE, N_CLUSTER, 
			SUM(IN_COUNT) AS IN_COUNT, SUM(OUT_COUNT) AS OUT_COUNT, 
			SUM(IN_COUNT) + SUM(OUT_COUNT) AS TOT_COUNT
		FROM (
			SELECT
				'D' AS D_TYPE, N_CLUSTER, 
				N_DAY,
				MAX(N_INBOUND) AS IN_COUNT, MAX(N_OUTBOUND) AS OUT_COUNT, 
				MAX(N_INBOUND) + MAX(N_OUTBOUND) AS TOT_COUNT
			FROM TB_TAPI_CALL_ACCRUE
			GROUP BY N_CLUSTER, N_DAY
		) A
		WHERE	N_DAY BETWEEN DATE_FORMAT(now(), '%Y%m01') AND DATE_FORMAT(now(), '%Y%m31')
		GROUP BY N_CLUSTER
	</select>


	<!-- 콜 현황 (월단위:일별) -->
	<select id="callMonthSummaryList" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.callMonthSummaryList */
		SELECT
			N_DAY, DAYOFWEEK(STR_TO_DATE(N_DAY, '%Y%m%d'))-1 AS N_WEEK,
			SUM(IN_COUNT) AS IN_COUNT, SUM(OUT_COUNT) AS OUT_COUNT, 
			SUM(IN_COUNT) + SUM(OUT_COUNT) AS TOT_COUNT
		FROM (
			SELECT
				'D' AS D_TYPE, N_CLUSTER, 
				N_DAY,
				MAX(N_INBOUND) AS IN_COUNT, MAX(N_OUTBOUND) AS OUT_COUNT, 
				MAX(N_INBOUND) + MAX(N_OUTBOUND) AS TOT_COUNT
			FROM TB_TAPI_CALL_ACCRUE
			GROUP BY N_CLUSTER, N_DAY
		) A
		WHERE
			<if test="DAY_TYPE == 'NOW'">
				N_DAY BETWEEN DATE_FORMAT(now(), '%Y%m01') AND DATE_FORMAT(now(), '%Y%m31')
			</if>
			<if test="DAY_TYPE == 'DATE'">
				N_DAY BETWEEN #{DATE_START} AND #{DATE_END}
			</if>
		GROUP BY N_DAY
		ORDER BY N_DAY
	</select>


	<!-- 콜 현황에 필요한 데이터 -->
	<select id="callExtraInfo" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.callExtraInfo */
		SELECT DT.*
			, DAYOFWEEK(DATE(M_START))-1 AS M_01_WEEK
			, DATE_FORMAT(CURDATE(),'%m.%d') AS D_NOW_STR
			, DATE_FORMAT(DT.W_START,'%m.%d') AS W_S_STR, DATE_FORMAT(DT.W_END,'%m.%d') AS W_E_STR
			, DATE_FORMAT(DT.M_START,'%m.%d') AS M_S_STR, DATE_FORMAT(DT.M_END,'%m.%d') AS M_E_STR
			, DATE_FORMAT(DT.M_START,'%Y.%m') AS M_CURR_STR
			, DATE_FORMAT(DATE(DT.M_START) - INTERVAL 1 MONTH,'%Y%m') AS M_PREV_STR
			, DATE_FORMAT(DATE(DT.M_START) + INTERVAL 1 MONTH,'%Y%m') AS M_NEXT_STR 
		FROM (
			SELECT
				DATE_FORMAT(CURDATE(), '%Y%m%d') AS D_NOW,
				DATE_FORMAT(DATE(CURDATE() - INTERVAL (DAYOFWEEK(CURDATE())-1) DAY), '%Y%m%d') AS W_START,
				DATE_FORMAT(DATE(CURDATE() + INTERVAL (7-DAYOFWEEK(CURDATE())) DAY), '%Y%m%d') AS W_END,
				DATE_FORMAT(DATE(DATE_FORMAT(now(), '%Y-%m-01')), '%Y%m%d') AS M_START,
				DATE_FORMAT(DATE(DATE(DATE_FORMAT(now(), '%Y-%m-01')) + INTERVAL 1 MONTH) - INTERVAL 1 DAY, '%Y%m%d') AS M_END
		) DT
	</select>


	<!-- 콜 현황에 필요한 데이터 -->
	<select id="callExtraInfo2" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		/* dash_service.callExtraInfo2 */
		SELECT 'EX_INFO2'
			, DATE_FORMAT(DATE(#{DATE_START}), '%Y%m%d') AS M_START
			, DATE_FORMAT(DATE(DATE(#{DATE_START}) + INTERVAL 1 MONTH) - INTERVAL 1 DAY, '%Y%m%d') AS M_END
			, DAYOFWEEK(DATE(#{DATE_START}))-1 AS M_01_WEEK
			, DATE_FORMAT(DATE(#{DATE_START}),'%Y.%m') AS M_CURR_STR
			, DATE_FORMAT(DATE(#{DATE_START}) - INTERVAL 1 MONTH,'%Y%m') AS M_PREV_STR
			, DATE_FORMAT(DATE(#{DATE_START}) + INTERVAL 1 MONTH,'%Y%m') AS M_NEXT_STR 
	</select>

</mapper>