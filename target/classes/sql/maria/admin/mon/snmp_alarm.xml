<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="snmp_alarm">
  	<sql id="SQL_OderBy">
		<foreach collection="sort" item="s" separator=",">
		${s.field} ${s.dir}
		</foreach>
	</sql>
  <select id="select_list" resultType="hashmap" parameterType="hashmap">
	SELECT /* snmp_alarm.select_list */ @NUM AS TOTAL_COUNT, X.* 
	FROM (
		SELECT
	  			@NUM := @NUM + 1 NUM
				, CONCAT(N_MON_ID, N_SNMP_MAN_CODE, N_SNMP_MON_CODE, N_SNMP_TYPE_CODE, N_ALM_RATING) KEY_COL 
				, N_MON_ID, N_SNMP_MAN_CODE, N_SNMP_MON_CODE, N_SNMP_TYPE_CODE, S_WHERE, N_ALM_RATING, N_MON_ID AS OLD_N_MON_ID, N_SNMP_MAN_CODE AS OLD_N_SNMP_MAN_CODE, N_SNMP_MON_CODE AS OLD_N_SNMP_MON_CODE
				, (SELECT S_MON_NAME FROM TB_MON_INFO WHERE N_MON_ID = A.N_MON_ID) S_MON_NAME
				, (SELECT S_DESC FROM TB_SNMP_MAN_CODE WHERE N_SNMP_MAN_CODE = A.N_SNMP_MAN_CODE) S_SNMP_MAN_NAME
				, (SELECT S_DESC FROM TB_SNMP_MON_CODE WHERE N_SNMP_MAN_CODE = A.N_SNMP_MAN_CODE AND N_SNMP_MON_CODE = A.N_SNMP_MON_CODE) S_SNMP_MON_NAME
				, (SELECT S_DESC FROM TB_SNMP_VALUE_CODE WHERE N_SNMP_MAN_CODE = A.N_SNMP_MAN_CODE AND N_SNMP_MON_CODE = A.N_SNMP_MON_CODE AND N_SNMP_TYPE_CODE = A.N_SNMP_TYPE_CODE) S_SNMP_TYPE_NAME2
				, (SELECT S_ALM_MSG FROM TB_ALM_CODE WHERE N_ALM_TYPE = TRIM(CONCAT('14', LPAD(CONVERT(A.N_SNMP_MAN_CODE, CHAR), 3, '0'))) AND N_ALM_CODE = A.N_ALM_CODE) S_SNMP_TYPE_NAME
				, S_IN_VALUE
				, COALESCE((SELECT S_OUT_VALUE FROM TB_SNMP_VALUE_TYPE_CODE WHERE N_SNMP_MAN_CODE = A.N_SNMP_MAN_CODE AND N_SNMP_TYPE_CODE = (SELECT N_VALUE_TYPE_CODE FROM TB_SNMP_VALUE_CODE WHERE N_SNMP_MAN_CODE = A.N_SNMP_MAN_CODE AND N_SNMP_MON_CODE = A.N_SNMP_MON_CODE AND N_SNMP_TYPE_CODE = A.N_SNMP_TYPE_CODE) AND S_IN_VALUE = A.S_IN_VALUE), S_IN_VALUE) S_IN_VALUE_NAME
				, CASE
		    						WHEN S_WHERE = '1' THEN '보다작음(%gt;)'
		    						WHEN S_WHERE = '0' THEN '같음(=)'
		    						WHEN S_WHERE = '2' THEN '보다큼(&lt;)'
						END S_WHERE_NAME
				, (SELECT S_ALM_RATING_NAME FROM TB_ALM_RATING_CODE WHERE N_ALM_RATING = A.N_ALM_RATING) S_ALM_RATING_NAME
				, (SELECT N_GROUP_CODE FROM TB_MON_INFO WHERE N_MON_ID = A.N_MON_ID) N_GROUP_CODE
				, (SELECT S_GROUP_NAME FROM TB_SVR_GROUP WHERE N_GROUP_CODE = (SELECT N_GROUP_CODE FROM TB_MON_INFO WHERE N_MON_ID = A.N_MON_ID) AND F_USE = 'Y') GROUP_NAME
				, (SELECT S_MON_IP FROM TB_MON_INFO WHERE N_MON_ID = A.N_MON_ID) S_MON_IP
				, (SELECT S_TYPE_NAME FROM TB_SVR_TYPE WHERE N_TYPE_CODE = (SELECT N_TYPE_CODE FROM TB_MON_INFO WHERE N_MON_ID = A.N_MON_ID)) TYPE_NAME
		FROM
		  		TB_SNMP_ALM_MAP A
		  		, (SELECT @NUM := 0) R
		<where>
			<if test="N_GROUP_CODE != '' and N_GROUP_CODE != null">
				AND N_MON_ID IN (SELECT N_MON_ID FROM TB_MON_INFO WHERE N_GROUP_CODE = #{N_GROUP_CODE}) 
			</if>
			<if test="N_TYPE_CODE != '' and N_TYPE_CODE != null">
				AND N_MON_ID IN (SELECT N_MON_ID FROM TB_MON_INFO WHERE N_TYPE_CODE = #{N_TYPE_CODE}) 
			</if>
			<if test="SEARCH_TYPE != null and SEARCH_TYPE != '' and SEARCH_TYPE == 'ID'">
				AND N_MON_ID LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%')
			</if>
			<if test="SEARCH_TYPE != null and SEARCH_TYPE != '' and SEARCH_TYPE == 'NM'">
				AND S_MON_NAME LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%')
			</if>
			<if test="SEARCH_TYPE != null and SEARCH_TYPE != '' and SEARCH_TYPE == 'IP'">
				AND S_MON_IP LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%')
			</if>			
		</where>
	  ) X
	  ORDER BY
	  <if test="sort == null">N_MON_ID</if>
	  <if test="sort != null">
		  <choose>
			  <when test="sort.size() == 0">
				  N_MON_ID
			  </when>
			  <otherwise>
				  <include refid="SQL_OderBy"/>
			  </otherwise>
		  </choose>
	  </if>
	  LIMIT #{firstRecordIndex}, #{lastRecordIndex}
  </select>
  
  <select id="SnmpTypeCodeListQry" resultType="java.util.HashMap" parameterType="java.util.HashMap">
  			SELECT /* snmp_alarm.SnmpTypeCodeListQry */
        			A.N_SNMP_MAN_CODE, A.N_SNMP_MON_CODE, A.N_SNMP_TYPE_CODE, B.S_ALM_MSG S_DESC, A.N_VALUE_TYPE_CODE
        			, B.N_ALM_CODE, B.N_ALM_TYPE
			FROM
        			TB_SNMP_VALUE_CODE A INNER JOIN TB_ALM_CODE B ON REPLACE('14' || TO_CHAR(A.N_SNMP_MAN_CODE, '000'),' ','') = TO_CHAR(B.N_ALM_TYPE) AND TO_NUMBER(REPLACE(TO_CHAR(A.N_SNMP_MON_CODE) || TO_CHAR(A.N_SNMP_TYPE_CODE, '000'), ' ', '')) = B.N_ALM_CODE
			WHERE
        			N_SNMP_MAN_CODE = #{N_SNMP_MAN_CODE} 
			AND     N_SNMP_MON_CODE = #{N_SNMP_MON_CODE}
			ORDER BY
        			N_SNMP_TYPE_CODE
  </select>
  
  <insert id="insert_data" parameterType="hashmap" statementType="PREPARED">
  		INSERT INTO TB_SNMP_ALM_MAP(N_MON_ID, N_SNMP_MAN_CODE, N_SNMP_MON_CODE, N_SNMP_TYPE_CODE, S_IN_VALUE, S_WHERE, N_ALM_CODE, N_ALM_RATING)
		SELECT
		        A.N_MON_ID, #{N_SNMP_MAN_CODE}, #{N_SNMP_MON_CODE}, B.N_SNMP_TYPE_CODE, COALESCE(#{S_IN_VALUE}, 'X'), COALESCE(#{S_WHERE}, 'X'), CONVERT(TRIM(CONCAT(#{N_SNMP_MON_CODE}, LPAD(CONVERT(B.N_SNMP_TYPE_CODE, CHAR), 3, '0'))), SIGNED), #{N_ALM_RATING}
		FROM
		        (
            		SELECT #{N_MON_ID} N_MON_ID FROM dual
        		) A
        		,(
            		SELECT #{N_SNMP_TYPE_CODE} N_SNMP_TYPE_CODE FROM dual
        		) B
  </insert>
  
  <delete id="delete_data" parameterType="hashmap" statementType="PREPARED">
  		DELETE FROM TB_SNMP_ALM_MAP
		WHERE
		        N_MON_ID = #{N_MON_ID}
        AND N_SNMP_MAN_CODE = #{N_SNMP_MAN_CODE}
        AND N_SNMP_MON_CODE = #{N_SNMP_MON_CODE}
        AND N_SNMP_TYPE_CODE = #{N_SNMP_TYPE_CODE}
        AND N_ALM_RATING = #{N_ALM_RATING}
  </delete>
  
  <update id="update_data" parameterType="hashmap" statementType="PREPARED">
  		UPDATE TB_SNMP_ALM_MAP
			SET N_SNMP_TYPE_CODE = #{N_SNMP_TYPE_CODE},
				N_SNMP_MAN_CODE = #{N_SNMP_MAN_CODE},
				N_SNMP_MON_CODE = #{N_SNMP_MON_CODE},
				S_IN_VALUE = COALESCE(#{S_IN_VALUE}, 'X'),
				S_WHERE = COALESCE(#{S_WHERE}, 'X'),
				N_ALM_CODE = CONVERT(TRIM(CONCAT(#{N_SNMP_MON_CODE}, LPAD(CONVERT(N_SNMP_TYPE_CODE, CHAR), 3, '0'))), SIGNED),
				N_ALM_RATING = #{N_ALM_RATING}
  		WHERE
		    N_MON_ID = #{N_MON_ID} 
		  AND N_SNMP_MAN_CODE = #{N_SNMP_MAN_CODE} 
		  AND N_SNMP_MON_CODE = #{N_SNMP_MON_CODE} 
		  AND N_SNMP_TYPE_CODE = #{N_SNMP_TYPE_CODE} 
		  AND N_ALM_RATING = #{N_ALM_RATING}
  </update>
  
  <select id="detail_info" resultType="java.util.HashMap" parameterType="java.util.HashMap">
		SELECT /* snmp_alarm.detail_info */
				N_MON_ID, N_SNMP_MAN_CODE, N_SNMP_MON_CODE, N_SNMP_TYPE_CODE, S_WHERE, N_ALM_RATING, S_IN_VALUE
				, (SELECT S_MON_NAME FROM TB_MON_INFO WHERE N_MON_ID = A.N_MON_ID) S_MON_NAME
				, (SELECT S_DESC FROM TB_SNMP_MAN_CODE WHERE N_SNMP_MAN_CODE = A.N_SNMP_MAN_CODE) S_SNMP_MAN_NAME
				, (SELECT S_DESC FROM TB_SNMP_MON_CODE WHERE N_SNMP_MAN_CODE = A.N_SNMP_MAN_CODE AND N_SNMP_MON_CODE = A.N_SNMP_MON_CODE) S_SNMP_MON_NAME
		FROM
		  		TB_SNMP_ALM_MAP A
		WHERE 1=1
		  AND N_MON_ID = #{N_MON_ID} 
		  AND N_SNMP_MAN_CODE = #{N_SNMP_MAN_CODE} 
		  AND N_SNMP_MON_CODE = #{N_SNMP_MON_CODE} 
		  AND N_SNMP_TYPE_CODE = #{N_SNMP_TYPE_CODE} 
		  AND N_ALM_RATING = #{N_ALM_RATING}
  </select>

</mapper>