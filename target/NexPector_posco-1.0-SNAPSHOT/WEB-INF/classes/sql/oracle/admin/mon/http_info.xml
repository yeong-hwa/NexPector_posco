<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="http_info">
	<sql id="SQL_OderBy">
		<foreach collection="sort" item="s" separator=",">
			${s.field} ${s.dir}
		</foreach>
	</sql>

	<select id="select_list" resultType="hashmap" parameterType="hashmap">
		SELECT /* http_info.select_list */ *, @NUM AS TOTAL_COUNT
		FROM (
			SELECT @NUM := @NUM + 1 NUM, A.*
			FROM (
			   	SELECT 
			   		A.MON_ID, A.URL_ALIAS, A.SERVER_IP, A.SERVER_PORT, A.URL, A.COLLECT_PERIOD
			   		, A.PARSER_NAME
			   		, DATE_FORMAT(A.REGIST_DATE, '%Y-%m-%d') REGIST_DATE, DATE_FORMAT(A.UPDATE_DATE, '%Y-%m-%d') UPDATE_DATE
			   		, A.ENABLE, A.CONN_CHECK, A.`DESC`, A.ALM_TYPE, A.ALM_CODE, A.PROTOCOL_TYPE, A.ENCODE_TYPE 
			   		, B.S_MON_NAME, B.S_MON_IP, B.N_TYPE_CODE, B.N_GROUP_CODE
		       		, (SELECT S_TYPE_NAME FROM TB_SVR_TYPE WHERE N_TYPE_CODE = B.N_TYPE_CODE) TYPE_NAME
		       		, (SELECT S_GROUP_NAME FROM TB_SVR_GROUP WHERE N_GROUP_CODE = B.N_GROUP_CODE AND F_USE = 'Y') GROUP_NAME
					, (SELECT S_VALUE FROM TB_CODE WHERE S_GROUP_CODE='USE_YN' AND S_CODE = A.ENABLE) USE_YN
				FROM
					TB_HTTP_URL_INFO A LEFT OUTER JOIN TB_MON_INFO B ON A.MON_ID = B.N_MON_ID
			) A, (SELECT @NUM := 0) R
			<where> 
				<if test="N_GROUP_CODE != null and N_GROUP_CODE != ''">
					AND N_GROUP_CODE = #{N_GROUP_CODE}
				</if>
				<if test="N_TYPE_CODE != null and N_TYPE_CODE != ''">
					AND N_TYPE_CODE = #{N_TYPE_CODE}
				</if>
				<if test="SEARCH_TYPE != null and SEARCH_TYPE != '' and SEARCH_TYPE == 'ID'">
					AND MON_ID LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%')
				</if>
				<if test="SEARCH_TYPE != null and SEARCH_TYPE != '' and SEARCH_TYPE == 'NM'">
					AND S_MON_NAME LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%')
				</if>
				<if test="SEARCH_TYPE != null and SEARCH_TYPE != '' and SEARCH_TYPE == 'IP'">
					AND S_MON_IP LIKE CONCAT('%', #{SEARCH_KEYWORD}, '%')
				</if>
			</where>
			ORDER BY 
			<if test="sort == null">A.MON_ID, A.URL_ALIAS, A.PARSER_NAME</if>
			<if test="sort != null">
				<choose>
					<when test="sort.size() == 0">
						A.MON_ID, A.URL_ALIAS, A.PARSER_NAME
					</when>
					<otherwise>
						<include refid="SQL_OderBy"/>
					</otherwise>
				</choose>
			</if>
		) C
		LIMIT #{firstRecordIndex}, #{lastRecordIndex}
	</select>

	<select id="detail_data" resultType="hashmap" parameterType="hashmap">
		SELECT /* http_info.detail_data */ 
	   		A.MON_ID, A.URL_ALIAS, A.SERVER_IP, A.SERVER_PORT, A.URL, A.COLLECT_PERIOD
	   		, A.PARSER_NAME
	   		, DATE_FORMAT(A.REGIST_DATE, '%Y-%m-%d') REGIST_DATE, DATE_FORMAT(A.UPDATE_DATE, '%Y-%m-%d') UPDATE_DATE
	   		, A.ENABLE, A.CONN_CHECK, A.`DESC`, A.ALM_TYPE, A.ALM_CODE, A.PROTOCOL_TYPE, A.ENCODE_TYPE 
	   		, B.S_MON_NAME, B.S_MON_IP
       		, (SELECT S_TYPE_NAME FROM TB_SVR_TYPE WHERE N_TYPE_CODE = B.N_TYPE_CODE) TYPE_NAME
       		, (SELECT S_GROUP_NAME FROM TB_SVR_GROUP WHERE N_GROUP_CODE = B.N_GROUP_CODE AND F_USE = 'Y') GROUP_NAME
			, (SELECT S_VALUE FROM TB_CODE WHERE S_GROUP_CODE='USE_YN' AND S_CODE = A.ENABLE) USE_YN
		FROM TB_HTTP_URL_INFO A LEFT OUTER JOIN TB_MON_INFO B 
		ON A.MON_ID = B.N_MON_ID
		WHERE MON_ID = #{MON_ID} AND PARSER_NAME = #{PARSER_NAME} AND URL_ALIAS = #{URL_ALIAS}
	</select>

	<insert id="insert_data" parameterType="hashMap" statementType="PREPARED">
		INSERT INTO TB_HTTP_URL_INFO(
			MON_ID
			, PARSER_NAME
			, URL_ALIAS
			, SERVER_IP
			, SERVER_PORT
			, URL
			<if test="COLLECT_PERIOD != null and COLLECT_PERIOD != ''">
			, COLLECT_PERIOD
			</if>
			, REGIST_DATE
			, ENABLE
			, CONN_CHECK
			, `DESC`
			, ALM_TYPE
			, ALM_CODE
			, PROTOCOL_TYPE
			, ENCODE_TYPE
		)
		VALUES (
			#{MON_ID}
			, #{PARSER_NAME}
			, #{URL_ALIAS}
			, #{SERVER_IP}
			, #{SERVER_PORT}
			, #{URL}
			<if test="COLLECT_PERIOD != null and COLLECT_PERIOD != ''">
			, #{COLLECT_PERIOD}
			</if>
			, NOW()
			, #{ENABLE}
			, #{CONN_CHECK}
			, #{DESC}
			<choose>
				<when test="ALM_TYPE == null or ALM_TYPE == ''">, null</when><otherwise>, #{ALM_TYPE}</otherwise>
			</choose>
			<choose>
				<when test="ALM_CODE == null or ALM_CODE == ''">, null</when><otherwise>, #{ALM_CODE}</otherwise>
			</choose>
			, #{PROTOCOL_TYPE}
			, #{ENCODE_TYPE}
		)
	</insert>

	<update id="update_data" parameterType="hashmap" statementType="PREPARED">
  		UPDATE TB_HTTP_URL_INFO
  		SET
			URL = #{URL}
			, SERVER_IP = #{SERVER_IP}
			, SERVER_PORT = #{SERVER_PORT}
			, URL = #{URL}
			, PROTOCOL_TYPE = #{PROTOCOL_TYPE}
			<if test="COLLECT_PERIOD != null and COLLECT_PERIOD != ''">, COLLECT_PERIOD = #{COLLECT_PERIOD}</if>
			, UPDATE_DATE = NOW()
			, ENABLE = #{ENABLE}
			, CONN_CHECK = #{CONN_CHECK}
			, `DESC` = #{DESC}
			<choose>
				<when test="ALM_TYPE == null or ALM_TYPE == ''">, ALM_TYPE = null</when><otherwise>, ALM_TYPE = #{ALM_TYPE}</otherwise>
			</choose>
			<choose>
				<when test="ALM_CODE == null or ALM_CODE == ''">, ALM_CODE = null</when><otherwise>, ALM_CODE = #{ALM_CODE}</otherwise>
			</choose>
			, ENCODE_TYPE = #{ENCODE_TYPE}
  		WHERE
			MON_ID = #{MON_ID} AND PARSER_NAME = #{PARSER_NAME} AND URL_ALIAS = #{URL_ALIAS}
	</update>

	<delete id="delete_data" parameterType="hashmap" statementType="PREPARED">
  		DELETE FROM TB_HTTP_URL_INFO
  		WHERE MON_ID = #{MON_ID} AND PARSER_NAME = #{PARSER_NAME} AND URL_ALIAS = #{URL_ALIAS}
	</delete>
</mapper>